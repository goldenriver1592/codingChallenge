name: Cypress Cross-Platform & Multi-Browser

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Select branch to test'
        required: false
        default: 'main'
      reset_env:
        description: 'Reset environment (clean install)?'
        required: false
        default: 'false'

jobs:
  cypress-tests:
    strategy:
      matrix:
        include:
            - os: ubuntu-latest
              browser: chrome
            - os: ubuntu-latest
              browser: firefox
            - os: ubuntu-latest
              browser: edge
            - os: windows-latest
              browser: chrome
            - os: windows-latest
              browser: firefox
            - os: windows-latest
              browser: edge
            - os: macos-latest
              browser: chrome
            - os: macos-latest
              browser: firefox
            - os: macos-latest
              browser: edge

    runs-on: ${{ matrix.os }}

    env:
      CYPRESS_BASE_URL: 'https://opensource-demo.orangehrmlive.com'
      BROWSER: ${{ matrix.browser || 'chrome' }}
      RUNNER_OS: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      
      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-

      - name: Install cross-env on Windows
        if: runner.os == 'Windows'
        run: npm install --save-dev cross-env

      - name: Verify Cypress binary
        run: npx cypress verify

      - name: Optionally Reset Environment
        if: ${{ github.event.inputs.reset_env == 'true' }}
        run: npm run reset_frw

      - name: Install Dependencies
        if: ${{ github.event.inputs.reset_env != 'true' }}
        run: npm ci

      - name: Prepare Allure Report Folder
        run: npm run prereport

      - name: Run Cypress Tests
        run: |
          echo "Running tests on OS: $RUNNER_OS | Browser: $BROWSER"
          npx cypress run --browser $BROWSER || echo "Tests failed on $BROWSER"
        shell: bash

      - name: Upload Allure Results - ${{ matrix.os }}-${{ matrix.browser }}
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.os }}-${{ matrix.browser }}
          path: cypress/reports/allure-results

  merge-and-deploy:
    runs-on: ubuntu-latest
    needs: cypress-tests
    if: always()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm ci

      - name: Download All Allure Results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          merge-multiple: true
          path: cypress/reports/allure-results
        
      - name: Generate timestamp VERSION
        run: |
          echo "VERSION=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Generate Allure Report
        run: |
          mkdir -p cypress/reports/allure-report/$VERSION
          npx allure generate cypress/reports/allure-results --clean -o cypress/reports/allure-report/$VERSION
      
      - name: Track report versions
        run: |
          cd cypress/reports/allure-report
          echo $VERSION >> versions.txt
          sort -ru versions.txt -o versions.txt

      - name: Generate Allure homepage
        run: |
          cd cypress/reports/allure-report
          echo "<html><head><title>Allure Reports</title></head><body><h1>Allure Report History</h1><ul>" > index.html
          for version in $(cat versions.txt); do
            echo "<li><a href=\"$version/index.html\">$version</a></li>" >> index.html
          done
          echo "</ul></body></html>" >> index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./cypress/reports/allure-report
